(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{360:function(t,s,a){"use strict";a.r(s);var e=a(42),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"quickjs-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quickjs-的使用"}},[t._v("#")]),t._v(" QuickJS 的使用")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("项目中提供了一个 Makefile 文件来在 Linux 或 MacOS/X 上编译引擎。通过使用 MingGW 工具在 Linux 主机上进行交叉编译，可以获得 Windows 的初步支持。")]),t._v(" "),a("p",[t._v("如果要选择特定的编译选项，请编辑 "),a("code",[t._v("Makefile")]),t._v(" 的顶部部分，然后运行 "),a("code",[t._v("make")]),t._v(" 命令。")]),t._v(" "),a("p",[t._v("如果希望将二进制文件和依赖文件安装到 /usr/local，则可以以 root 用户身份输入 "),a("code",[t._v("make install")]),t._v(" 命令（使用 QuickJS 不需要这样做）。")]),t._v(" "),a("h2",{attrs:{id:"快速开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" 快速开始")]),t._v(" "),a("h3",{attrs:{id:"qjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qjs"}},[t._v("#")]),t._v(" qjs")]),t._v(" "),a("p",[t._v("qjs 是命令行解释器（REPL， 即Read-Eval-Print Loop）。你可以将 JavaScript\n文件或 JavaScript 表达式作为参数传入来执行它们：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("qjs examples"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])])]),a("h3",{attrs:{id:"qjsc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qjsc"}},[t._v("#")]),t._v(" qjsc")]),t._v(" "),a("p",[t._v("qjsc 是命令行编译器：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("qjsc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o hello examples"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hello\n")])])]),a("p",[t._v("执行上面的命令会生成没有外部依赖的名为 "),a("code",[t._v("hello")]),t._v(" 的可执行文件。")]),t._v(" "),a("h2",{attrs:{id:"命令行选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行选项"}},[t._v("#")]),t._v(" 命令行选项")]),t._v(" "),a("h3",{attrs:{id:"qjs-解释器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qjs-解释器"}},[t._v("#")]),t._v(" qjs 解释器")]),t._v(" "),a("p",[t._v("用法：qjs [options] [file [args]]")]),t._v(" "),a("p",[t._v("Options 如下：")]),t._v(" "),a("p",[t._v("-h\n--help\n列举选项。")]),t._v(" "),a("p",[t._v("-e EXPR\n--eval EXPR\n执行 EXPR。")]),t._v(" "),a("p",[t._v("-i\n---interactive\n进入交互模式（当命令行提供的是文件时，交互模式不是默认设置的）。")]),t._v(" "),a("p",[t._v("-m\n--module\n作为 ES6 模块加载（默认自动检测）。如果文件名为 "),a("code",[t._v(".mjs")]),t._v(" 或者如果源码中第一个关键字是 "),a("code",[t._v("import")]),t._v("，则会自动检测为模块。")]),t._v(" "),a("p",[t._v("--script\n作为 ES6 脚本加载（默认自动检测）。")]),t._v(" "),a("p",[t._v('--bignum\n启用 bignum 扩展：BigDecimal对象，BigFloat对象和 "use math" 指令。')]),t._v(" "),a("p",[t._v("-I file\n--include file\n包括附加文件。")]),t._v(" "),a("p",[t._v("高级选项包括：")]),t._v(" "),a("p",[t._v("--std\n是 std 和 os 模块可以用于已经加载的脚本，即使它不是模块。")]),t._v(" "),a("p",[t._v("-d\n--dump\n转储内存使用情况统计信息。")]),t._v(" "),a("p",[t._v("-q\n--quit\n只需实例化解释器并退出。")]),t._v(" "),a("h3",{attrs:{id:"qjsc-编译器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qjsc-编译器"}},[t._v("#")]),t._v(" qjsc 编译器")]),t._v(" "),a("p",[t._v("用法：qjsc [options] [files]")]),t._v(" "),a("p",[t._v("Options 如下：")]),t._v(" "),a("p",[t._v("-c\n仅在 C 文件中输出字节码。默认为输出可执行文件。")]),t._v(" "),a("p",[t._v("-e\n在 C 文件中输出 "),a("code",[t._v("main（）")]),t._v(" 和字节码。默认为输出可执行文件。")]),t._v(" "),a("p",[t._v("-o output\n设置输出文件名（默认为 "),a("code",[t._v("out.c")]),t._v(" 或 "),a("code",[t._v("a.out")]),t._v("）。")]),t._v(" "),a("p",[t._v("-N cname\n设置生成数据的 C 名称。")]),t._v(" "),a("p",[t._v("-m\n编译为 JavasSript 模块（默认自动检测）。")]),t._v(" "),a("p",[t._v("-D module_name\n编译动态加载的模块及其依赖项。当代码中使用了 "),a("code",[t._v("import")]),t._v(" 关键字或者 "),a("code",[t._v("os.Worker")]),t._v(" 构造函数时，此选项是必需的，因为编译器无法静态地找到动态加载的模块的名称。")]),t._v(" "),a("p",[t._v("-M module_name[,cname]\n为外部 C 模块添加初始化代码。请参阅 "),a("code",[t._v("c_module")]),t._v(" 示例。")]),t._v(" "),a("p",[t._v("-x\n字节交换输出（仅用于交叉编译）。")]),t._v(" "),a("p",[t._v("-flto\n使用链接时间优化。编译过程较慢，但可执行文件更小更快。当使用 "),a("code",[t._v("-fno-x")]),t._v(" 选项时，将自动设置此选项。")]),t._v(" "),a("p",[t._v("-fno-[eval|string-normalize|regexp|json|proxy|map|typedarray|promise|bigint]\n禁用选定的语言功能以便生成较小的可执行文件。")]),t._v(" "),a("p",[t._v('-fbignum\n启用 bignum 扩展：BigDecimal对象，BigFloat对象和 "use math" 指令。')]),t._v(" "),a("h2",{attrs:{id:"qjscalc-应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qjscalc-应用"}},[t._v("#")]),t._v(" qjscalc 应用")]),t._v(" "),a("p",[a("code",[t._v("qjscalc")]),t._v(" 应用是 qjs 命令行解释器的超集，实现了具有任意大的整数和浮点数，分数，复数，多项式和矩阵的 JavaScript 计算器。源代码在qjscalc.js中。有关更多文档和Web版本的信息，请访问 http://numcalc.com。")]),t._v(" "),a("h2",{attrs:{id:"内置测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置测试"}},[t._v("#")]),t._v(" 内置测试")]),t._v(" "),a("p",[t._v("执行 "),a("code",[t._v("make test")]),t._v(" 以运行 QuickJS 项目中包含的一些内置测试。")]),t._v(" "),a("h2",{attrs:{id:"test262-ecmascript-test-suite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test262-ecmascript-test-suite"}},[t._v("#")]),t._v(" Test262 (ECMAScript Test Suite)")]),t._v(" "),a("p",[t._v("QuickJS 项目中包含了 test262 的运行程序。test262 tests 可以通过在 QuickJS 项目中执行下面的命令安装：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("git clone https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tc39"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test262"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git test262\ncd test262\npatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tests"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test262"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("patch\ncd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("该 patch 修补程序添加了实现特定的工具功能，并优化了效率低下的 RegExp 字符类和 Unicode 属性转义测试（测试本身未修改，仅优化了较慢的字符串初始化功能）。")]),t._v(" "),a("p",[t._v("该测试套件可以通过 "),a("code",[t._v("make test2")]),t._v(" 命令运行。")]),t._v(" "),a("p",[t._v("配置文件 test262.conf（对于 ES5.1 配置文件为 test262o.conf）包含用于运行各种测试的选项。可以根据功能或文件名排除测试。")]),t._v(" "),a("p",[t._v("文件 test262_errors.txt 包含当前错误列表。当出现新错误或纠正或修改现有错误时，运行程序将显示一条消息。使用 "),a("code",[t._v("-u")]),t._v(" 选项更新当前错误列表（或 "),a("code",[t._v("make test2-update")]),t._v("）。")]),t._v(" "),a("p",[t._v("文件 test262_report.txt 包含所有测试的日志。对特定错误进行更清晰的分析很有用。万一发生崩溃，最后一行对应于失败的测试。")]),t._v(" "),a("p",[t._v("使用语法 "),a("code",[t._v("./run-test262 -c test262.conf -f filename.js")]),t._v(" 运行单个测试。使用语法 "),a("code",[t._v("./run-test262 -c test262.conf N")]),t._v(" 以测试编号 N 开始测试。")]),t._v(" "),a("p",[t._v("有关更多信息，请运行 "),a("code",[t._v("./run-test262")]),t._v(" 以查看 test262 运行程序的命令行选项。")]),t._v(" "),a("p",[a("code",[t._v("run-test262")]),t._v(" 接受从 "),a("code",[t._v("test262-harness5")]),t._v(" 到 "),a("code",[t._v("eshost")]),t._v(" 调用的 -N 选项。除非想在相同条件下将 QuickJS 与其他引擎进行比较，否则不建议以此方式运行测试，因为它要慢得多（通常为半小时而不是大约 100 秒）。")])])}),[],!1,null,null,null);s.default=v.exports}}]);